{"version":3,"file":"static/js/992.2a251cb7.chunk.js","mappings":"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","sources":["components/BreadCrumb.tsx","hooks/useDatabaseValues.tsx","hooks/useHttpRequestsContent.tsx","pages/authorDetails/AuthorTable.tsx","pages/authorDetails/IndexAuthorDetails.tsx"],"sourcesContent":["import NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Link from \"@mui/material/Link\";\r\nimport { Link as RouterLink, useLocation, useParams } from \"react-router-dom\";\r\nimport useDatabaseValues from \"../hooks/useDatabaseValues\";\r\n\r\nconst Breadcrumb = () => {\r\n  const { bookIdUrl, authorUrl } = useParams();\r\n  const location = useLocation();\r\n  const { bookDetails, authorBooks } = useDatabaseValues(bookIdUrl, authorUrl);\r\n\r\n  let currentLink = \"\";\r\n\r\n  const crumbs = location.pathname.split(\"/\").filter(crumb => crumb !== \"\");\r\n\r\n  const crumbsToPrint = crumbs.map((crumb, idx) => {\r\n    currentLink += `/${crumb}`;\r\n\r\n    let crumbsToPrint;\r\n\r\n    if (bookDetails?.authorName === undefined && authorBooks?.length === 0) {\r\n      crumbsToPrint = <Typography color=\"error\"> Brak danych </Typography>;\r\n    } else if (crumb === \"undefined\") {\r\n      crumbsToPrint = <Typography color=\"error\"> Brak danych </Typography>;\r\n    } else if (crumbs.length === 3 && idx === crumbs.length - 1) {\r\n      crumbsToPrint = bookDetails?.bookTitle ?? \"\";\r\n    } else if (crumbs.includes(\"author\")) {\r\n      crumbsToPrint = authorBooks?.[0]?.authorName ?? \"\";\r\n    } else if (crumbs.includes(\"books\")) {\r\n      crumbsToPrint = bookDetails?.bookTitle ?? \"\";\r\n    }\r\n\r\n    if (crumb === \"author\" || crumb === \"books\") {\r\n      return null;\r\n    }\r\n\r\n    if (idx === crumbs.length - 1) {\r\n      return (\r\n        <Typography\r\n          key={crypto.randomUUID()}\r\n          color=\"info.main\"\r\n          variant=\"h3\"\r\n        >\r\n          {crumbsToPrint}\r\n        </Typography>\r\n      );\r\n    } else {\r\n      return (\r\n        <RouterLink\r\n          key={crypto.randomUUID()}\r\n          to={currentLink}\r\n          style={{ textDecoration: \"none\" }}\r\n        >\r\n          <Typography\r\n            color=\"info.main\"\r\n            variant=\"h3\"\r\n            sx={{\r\n              \":hover\": { color: \"secondary.main\" },\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            {crumbsToPrint}\r\n          </Typography>\r\n        </RouterLink>\r\n      );\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Box my={2} p={2} bgcolor=\"primary.main\">\r\n      <Breadcrumbs\r\n        aria-label=\"breadcrumb\"\r\n        separator={\r\n          <NavigateNextIcon fontSize=\"small\" sx={{ color: \"info.main\" }} />\r\n        }\r\n      >\r\n        {location.pathname === \"/\" ? (\r\n          <Typography variant=\"h3\" color=\"info.main\">\r\n            Lista\r\n          </Typography>\r\n        ) : (\r\n          <RouterLink\r\n            to={`/`}\r\n            style={{\r\n              textDecoration: \"none\",\r\n            }}\r\n          >\r\n            <Typography\r\n              color=\"info.main\"\r\n              variant=\"h3\"\r\n              sx={{\r\n                \":hover\": { color: \"secondary.main\" },\r\n                cursor: \"pointer\",\r\n              }}\r\n            >\r\n              Lista\r\n            </Typography>\r\n          </RouterLink>\r\n        )}\r\n\r\n        {crumbsToPrint}\r\n      </Breadcrumbs>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Breadcrumb;\r\n","import { useBooksQuery } from \"../services/ApiSlice\";\r\n\r\ninterface ModelBookToPrint {\r\n  id: string;\r\n  bookTitle: string;\r\n  authorName: string;\r\n  publishedDate: string;\r\n  bookCover: string;\r\n  description: string;\r\n}\r\n\r\ninterface ModelDatabaseValues {\r\n  booksToPrint?: ModelBookToPrint[];\r\n  bookDetails?: ModelBookToPrint;\r\n  authorBooks?: ModelBookToPrint[];\r\n  error?: {};\r\n  isLoading: boolean;\r\n}\r\n\r\nconst useDatabaseValues = (\r\n  bookIdUrl: string = \"default\",\r\n  authorUrl: string = \"default\"\r\n): ModelDatabaseValues => {\r\n  const { data, error, isLoading } = useBooksQuery();\r\n\r\n  const volumesData = data?.items?.map((volume: { [key: string]: any }) => {\r\n    return volume?.volumeInfo;\r\n  });\r\n\r\n  const booksToPrint = volumesData?.map(\r\n    (volume: { [key: string]: any }, idx: number) => {\r\n      return {\r\n        id: data?.items[idx].id,\r\n        bookTitle: volume.title,\r\n        authorName: volume?.authors?.join(\", \"),\r\n        publishedDate: volume.publishedDate,\r\n        bookCover: volume.imageLinks.thumbnail,\r\n        description: volume.description,\r\n      };\r\n    }\r\n  );\r\n\r\n  const bookDetails = booksToPrint?.find(({ id }) => {\r\n    return id === bookIdUrl;\r\n  });\r\n\r\n  const authorBooks =\r\n    authorUrl !== \"undefined\"\r\n      ? booksToPrint?.filter(({ authorName }) => {\r\n          return authorName?.toLowerCase() === authorUrl?.replaceAll(\"-\", \" \");\r\n        })\r\n      : [];\r\n\r\n  return { booksToPrint, isLoading, bookDetails, authorBooks, error };\r\n};\r\n\r\nexport default useDatabaseValues;\r\n","import useDatabaseValues from \"./useDatabaseValues\";\r\nimport Box from \"@mui/material/Box\";\r\nimport LoadingSpinner from \"../components/LoadingSpinner\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport React from \"react\";\r\n\r\nconst useHttpRequestsContent = (\r\n  JSXContent: React.ReactNode,\r\n  bookIdUrl?: string,\r\n  authorUrl?: string\r\n) => {\r\n  const { booksToPrint, error, isLoading } = useDatabaseValues(\r\n    bookIdUrl,\r\n    authorUrl\r\n  );\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Box sx={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        <LoadingSpinner />\r\n      </Box>\r\n    );\r\n  } else if (error) {\r\n    if (\"status\" in error) {\r\n      const errMsg = \"status\" in error && error.status;\r\n\r\n      return (\r\n        <Typography variant=\"h2\" color=\"error\" sx={{ textAlign: \"center\" }}>\r\n          <> Błąd: {errMsg}</>\r\n        </Typography>\r\n      );\r\n    }\r\n  } else if (!booksToPrint) {\r\n    return (\r\n      <Typography variant=\"h2\" color=\"error\" sx={{ textAlign: \"center\" }}>\r\n        Brak danych\r\n      </Typography>\r\n    );\r\n  } else {\r\n    return JSXContent;\r\n  }\r\n};\r\n\r\nexport default useHttpRequestsContent;\r\n","import Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport useDatabaseValues from \"../../hooks/useDatabaseValues\";\r\n\r\nconst AuthorTable = () => {\r\n  const navigate = useNavigate();\r\n  const { bookIdUrl, authorUrl } = useParams();\r\n  const { authorBooks } = useDatabaseValues(bookIdUrl, authorUrl);\r\n\r\n  const handleBookClick = (id: string) => {\r\n    navigate(`/author/${authorUrl}/${id}`);\r\n  };\r\n\r\n  return (\r\n    <TableContainer sx={{ padding: { xs: 1, sm: 0 } }}>\r\n      <Table aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            {[\"Nr\", \"Autor\", \"Tytuł\", \"Rok wydania\"].map(header => {\r\n              return (\r\n                <TableCell key={header}>\r\n                  <Typography variant=\"h2\" component=\"span\">\r\n                    {header}\r\n                  </Typography>\r\n                </TableCell>\r\n              );\r\n            })}\r\n          </TableRow>\r\n        </TableHead>\r\n\r\n        <TableBody>\r\n          {authorBooks?.map(\r\n            ({ bookTitle, authorName, id, publishedDate }, idx) => {\r\n              return (\r\n                <TableRow\r\n                  key={id}\r\n                  onClick={() => handleBookClick(id)}\r\n                  sx={{\r\n                    \":hover\": { backgroundColor: \"secondary.main\" },\r\n                    cursor: \"pointer\",\r\n                    backgroundColor: idx % 2 === 1 ? \"primary.main\" : \"inherit\",\r\n                  }}\r\n                >\r\n                  <TableCell>\r\n                    <Typography component=\"span\"> {idx + 1} </Typography>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Typography>\r\n                      {!authorName ? (\r\n                        <Typography color=\"error\" component=\"span\">\r\n                          Brak autora\r\n                        </Typography>\r\n                      ) : (\r\n                        <Typography component=\"span\">{authorName}</Typography>\r\n                      )}\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {!bookTitle ? (\r\n                      <Typography color=\"error\" component=\"span\">\r\n                        Brak tytułu\r\n                      </Typography>\r\n                    ) : (\r\n                      <Typography component=\"span\">{bookTitle}</Typography>\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {!publishedDate ? (\r\n                      <Typography color=\"error\" component=\"span\">\r\n                        Brak daty\r\n                      </Typography>\r\n                    ) : (\r\n                      <Typography component=\"span\">{publishedDate}</Typography>\r\n                    )}\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            }\r\n          )}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default AuthorTable;\r\n","import Container from \"@mui/material/Container\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Breadcrumb from \"../../components/BreadCrumb\";\r\nimport useHttpRequestsContent from \"../../hooks/useHttpRequestsContent\";\r\nimport AuthorTable from \"./AuthorTable\";\r\nimport useDatabaseValues from \"../../hooks/useDatabaseValues\";\r\n\r\nconst IndexAuthorDetails = () => {\r\n  const { bookIdUrl, authorUrl } = useParams();\r\n  const { authorBooks } = useDatabaseValues(bookIdUrl, authorUrl);\r\n  const tableContent = useHttpRequestsContent(\r\n    <AuthorTable />,\r\n    bookIdUrl,\r\n    authorUrl\r\n  );\r\n\r\n  return (\r\n    <main>\r\n      <Container sx={{ padding: { xs: 0, sm: 2 } }}>\r\n        <Breadcrumb />\r\n        <Typography\r\n          variant=\"h1\"\r\n          component=\"h2\"\r\n          sx={{ padding: { xs: 1 }, paddingLeft: { xs: 1, sm: 0 } }}\r\n        >\r\n          Lista książek autora\r\n        </Typography>\r\n\r\n        {authorBooks?.length === 0 ? (\r\n          <Typography variant=\"h2\" color=\"error\" sx={{ textAlign: \"center\" }}>\r\n            Brak danych\r\n          </Typography>\r\n        ) : (\r\n          tableContent\r\n        )}\r\n      </Container>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default IndexAuthorDetails;\r\n"],"names":["_useParams","useParams","bookIdUrl","authorUrl","location","useLocation","_useDatabaseValues","useDatabaseValues","bookDetails","authorBooks","currentLink","crumbs","pathname","split","filter","crumb","crumbsToPrint","map","idx","concat","undefined","authorName","length","_jsx","Typography","color","children","_bookDetails$bookTitl","bookTitle","includes","_authorBooks$0$author","_authorBooks$","_bookDetails$bookTitl2","variant","crypto","randomUUID","RouterLink","to","style","textDecoration","sx","cursor","Box","my","p","bgcolor","_jsxs","Breadcrumbs","separator","NavigateNextIcon","fontSize","_data$items","arguments","_useBooksQuery","useBooksQuery","data","error","isLoading","volumesData","items","volume","volumeInfo","booksToPrint","_volume$authors","id","title","authors","join","publishedDate","bookCover","imageLinks","thumbnail","description","find","_ref","_ref2","toLowerCase","replaceAll","JSXContent","display","justifyContent","LoadingSpinner","textAlign","errMsg","status","_Fragment","navigate","useNavigate","TableContainer","padding","xs","sm","Table","TableHead","TableRow","header","TableCell","component","TableBody","onClick","handleBookClick","backgroundColor","tableContent","useHttpRequestsContent","AuthorTable","Container","Breadcrumb","paddingLeft"],"sourceRoot":""}