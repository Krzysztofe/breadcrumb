{"version":3,"file":"static/js/590.945fbee6.chunk.js","mappings":"qLAkFA,IA3EmB,WACjB,IAAAA,GAAiCC,EAAAA,EAAAA,MAAzBC,EAASF,EAATE,UAAWC,EAASH,EAATG,UACbC,GAAWC,EAAAA,EAAAA,MACjBC,GAAqCC,EAAAA,EAAAA,GAAkBL,EAAWC,GAA1DK,EAAWF,EAAXE,YAAaC,EAAWH,EAAXG,YAEjBC,EAAc,GAEZC,EAASP,EAASQ,SAASC,MAAM,KAAKC,QAAO,SAAAC,GAAK,MAAc,KAAVA,CAAY,IAElEC,EAAgBL,EAAOM,KAAI,SAACF,EAAOG,GAGvC,IAAIF,EAEJ,GAJAN,GAAW,IAAAS,OAAQJ,QAIaK,KAAjB,OAAXZ,QAAW,IAAXA,OAAW,EAAXA,EAAaa,aAAoD,KAAb,OAAXZ,QAAW,IAAXA,OAAW,EAAXA,EAAaa,QACxDN,GAAgBO,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,MAAM,QAAOC,SAAC,uBACrC,GAAc,cAAVX,EACTC,GAAgBO,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,MAAM,QAAOC,SAAC,uBACrC,GAAsB,IAAlBf,EAAOW,QAAgBJ,IAAQP,EAAOW,OAAS,EAAG,CAAC,IAADK,EAC3DX,EAAsC,QAAzBW,EAAc,OAAXnB,QAAW,IAAXA,OAAW,EAAXA,EAAaoB,iBAAS,IAAAD,EAAAA,EAAI,EAC5C,MAAO,GAAIhB,EAAOkB,SAAS,UAAW,CAAC,IAADC,EAAAC,EACpCf,EAA4C,QAA/Bc,EAAc,OAAXrB,QAAW,IAAXA,GAAgB,QAALsB,EAAXtB,EAAc,UAAE,IAAAsB,OAAL,EAAXA,EAAkBV,kBAAU,IAAAS,EAAAA,EAAI,EAClD,MAAO,GAAInB,EAAOkB,SAAS,SAAU,CAAC,IAADG,EACnChB,EAAsC,QAAzBgB,EAAc,OAAXxB,QAAW,IAAXA,OAAW,EAAXA,EAAaoB,iBAAS,IAAAI,EAAAA,EAAI,EAC5C,CAEA,MAAc,WAAVjB,GAAgC,UAAVA,EACjB,KAGLG,IAAQP,EAAOW,OAAS,GAExBC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAETS,QAAQ,QACRC,GAAI,CAAEC,SAAU,QAAST,SAExBV,GAJIoB,OAAOC,eASdd,EAAAA,EAAAA,KAACe,EAAAA,GAAU,CAETC,GAAI7B,EACJ8B,MAAO,CAAEL,SAAU,OAAQM,OAAQ,WAAYf,SAE9CV,GAJIoB,OAAOC,aAQpB,IAEA,OACEd,EAAAA,EAAAA,KAACmB,EAAAA,EAAG,CAACC,EAAG,EAAGC,EAAG,EAAGC,QAAQ,UAASnB,UAChCoB,EAAAA,EAAAA,MAACC,EAAAA,EAAW,CACV,aAAW,aACXC,WAAWzB,EAAAA,EAAAA,KAAC0B,EAAAA,EAAgB,CAACd,SAAS,UAAWT,SAAA,CAE1B,MAAtBtB,EAASQ,UACRW,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACS,QAAQ,QAAQC,GAAI,CAAEC,SAAU,QAAST,SAAC,WAItDH,EAAAA,EAAAA,KAACe,EAAAA,GAAU,CAACC,GAAE,IAAOC,MAAO,CAAEL,SAAU,OAAQM,OAAQ,WAAYf,SAAC,UAKtEV,MAIT,C,wDCrEA,IARuB,WACrB,OACEO,EAAAA,EAAAA,KAACmB,EAAAA,EAAG,CAAAhB,UACFH,EAAAA,EAAAA,KAAC2B,EAAAA,EAAgB,CAACzB,MAAM,aAG9B,C,+CCwDA,IA1C0B,WAGC,IAAD0B,EAFxBjD,EAAiBkD,UAAA9B,OAAA,QAAAF,IAAAgC,UAAA,GAAAA,UAAA,GAAG,UACpBjD,EAAiBiD,UAAA9B,OAAA,QAAAF,IAAAgC,UAAA,GAAAA,UAAA,GAAG,UAGpBC,IADiBhD,EAAAA,EAAAA,OAC6BiD,EAAAA,EAAAA,MAAtCC,EAAIF,EAAJE,KAAMC,EAAKH,EAALG,MAAOC,EAASJ,EAATI,UAAWC,EAASL,EAATK,UAE1BC,EAAkB,OAAJJ,QAAI,IAAJA,GAAW,QAAPJ,EAAJI,EAAMK,aAAK,IAAAT,OAAP,EAAJA,EAAalC,KAAI,SAAC4C,GACpC,OAAa,OAANA,QAAM,IAANA,OAAM,EAANA,EAAQC,UACjB,IAEMC,EAA0B,OAAXJ,QAAW,IAAXA,OAAW,EAAXA,EAAa1C,KAChC,SAAC4C,EAAgC3C,GAAiB,IAAD8C,EAC/C,MAAO,CACLC,GAAQ,OAAJV,QAAI,IAAJA,OAAI,EAAJA,EAAMK,MAAM1C,GAAK+C,GACrBrC,UAAWiC,EAAOK,MAClB7C,WAAkB,OAANwC,QAAM,IAANA,GAAe,QAATG,EAANH,EAAQM,eAAO,IAAAH,OAAT,EAANA,EAAiBI,KAAK,MAClCC,cAAeR,EAAOQ,cACtBC,UAAWT,EAAOU,WAAWC,UAC7BC,UAAWZ,EAAOY,UAClBC,UAAWb,EAAOa,UAClBC,YAAad,EAAOc,YAExB,IAGInE,EAA0B,OAAZuD,QAAY,IAAZA,OAAY,EAAZA,EAAca,MAAK,SAAAC,GACrC,OAD0CA,EAAFZ,KAC1B/D,CAChB,IAEMO,EACU,cAAdN,EACgB,OAAZ4D,QAAY,IAAZA,OAAY,EAAZA,EAAcjD,QAAO,SAAAgE,GAAqB,IAAlBzD,EAAUyD,EAAVzD,WACtB,OAAiB,OAAVA,QAAU,IAAVA,OAAU,EAAVA,EAAY0D,kBAA2B,OAAT5E,QAAS,IAATA,OAAS,EAATA,EAAW6E,WAAW,IAAK,KAClE,IACA,GAIN,MAAO,CAAEjB,aAAAA,EAAcL,UAAAA,EAAWlD,YAAAA,EAAaC,YAAAA,EAAa+C,MAAAA,EAAOC,UAAAA,EACrE,C,kNCkCA,EA/EmB,SAACwB,GAClB,IAAMC,GAAWC,EAAAA,EAAAA,MACTpB,GAAiBxD,EAAAA,EAAAA,KAAjBwD,aACRqB,GAA8BC,EAAAA,EAAAA,KAC5B,SAACC,GAAgB,OAAKA,EAAMC,UAAU,IADhCC,EAAIJ,EAAJI,KAAMC,EAAWL,EAAXK,YAIRC,EAA6B,OAAZ3B,QAAY,IAAZA,OAAY,EAAZA,EAAc4B,MACnCH,EAAOC,EACPD,EAAOC,EAAcA,GAYvB,OACE3C,EAAAA,EAAAA,MAAC8C,EAAAA,EAAc,CAACC,UAAWC,EAAAA,EAAMpE,SAAA,EAC/BoB,EAAAA,EAAAA,MAACiD,EAAAA,EAAK,CAAC,aAAW,eAAcrE,SAAA,EAC9BH,EAAAA,EAAAA,KAACyE,EAAAA,EAAS,CAAAtE,UACRoB,EAAAA,EAAAA,MAACmD,EAAAA,EAAQ,CAAAvE,SAAA,EACPH,EAAAA,EAAAA,KAAC2E,EAAAA,EAAS,CAAAxE,SAAC,QACXH,EAAAA,EAAAA,KAAC2E,EAAAA,EAAS,CAAAxE,SAAC,WACXH,EAAAA,EAAAA,KAAC2E,EAAAA,EAAS,CAAAxE,SAAC,qBAGfH,EAAAA,EAAAA,KAAC4E,EAAAA,EAAS,CAAAzE,SACO,OAAdgE,QAAc,IAAdA,OAAc,EAAdA,EAAgBzE,KACf,SAAA4D,EAAqC3D,GAAiB,IAAnD+C,EAAEY,EAAFZ,GAAIrC,EAASiD,EAATjD,UAAWP,EAAUwD,EAAVxD,WAChB,OACEyB,EAAAA,EAAAA,MAACmD,EAAAA,EAAQ,CAAAvE,SAAA,EAIPH,EAAAA,EAAAA,KAAC2E,EAAAA,EAAS,CAAAxE,SAAE8D,EAAOC,EAAcvE,EAAM,KACvCK,EAAAA,EAAAA,KAAC2E,EAAAA,EAAS,CACRE,QAAS,kBAzBD,SAAC/E,GACzB,IAAMgF,EAAwB,OAAVhF,QAAU,IAAVA,OAAU,EAAVA,EAAY2D,WAAW,IAAK,KAAKD,cACrDG,EAAS,WAAD/D,OAAYkF,GACtB,CAsBiCC,CAAkBjF,EAAW,EAC5Ca,GAAI,CACF,SAAU,CACRqE,gBAAiB,SAAAC,GAAK,OAAIA,EAAMC,QAAQC,UAAUC,IAAI,GAExDlE,OAAQ,WACRf,SAEAL,IACAE,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,MAAM,QAAOC,SAAC,mBAK9BH,EAAAA,EAAAA,KAAC2E,EAAAA,EAAS,CACRE,QAAS,kBA5CH,SAACnC,GACvBiB,EAAS,UAAD/D,OAAW8C,GACrB,CA0CiC2C,CAAgB3C,EAAG,EAClC/B,GAAI,CACF,SAAU,CAAEqE,gBAAiB,OAC7B9D,OAAQ,WACRf,SAEAE,IACAL,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,MAAM,QAAOC,SAAC,yBA3BzBuC,EAkCX,SAILgB,EAAMvD,WAGb,E,oBCzCA,EAvC0B,WAAO,IAADmF,EACxBC,GAAWC,EAAAA,EAAAA,MACThD,GAAiBxD,EAAAA,EAAAA,KAAjBwD,aACRqB,GAA8BC,EAAAA,EAAAA,KAC5B,SAACC,GAAgB,OAAKA,EAAMC,UAAU,IADhCC,EAAIJ,EAAJI,KAAMC,EAAWL,EAAXK,YAqBd,OACElE,EAAAA,EAAAA,KAACyF,EAAAA,EAAe,CACdnB,UAAU,MACVoB,MAA2B,QAAtBJ,EAAc,OAAZ9C,QAAY,IAAZA,OAAY,EAAZA,EAAczC,cAAM,IAAAuF,EAAAA,EAAI,EAC/BrB,KAAMA,EACN0B,aAtBqB,SACvBC,EACAC,GAEAN,GAASO,EAAAA,EAAAA,IAAsBD,GACjC,EAkBI3B,YAAaA,EACb6B,oBAjB4B,SAC9BH,GAEAL,GAASS,EAAAA,EAAAA,IAA6BC,SAASL,EAAMM,OAAOC,QAC9D,EAcIC,kBAAkBpG,EAAAA,EAAAA,KAAA,QAAAG,SAAM,gCACxBkG,mBAb8B,SAAH/C,GAA8C,IAAxCgD,EAAIhD,EAAJgD,KAAMtF,EAAEsC,EAAFtC,GAAI0E,EAAKpC,EAALoC,MAC7C,MAAM,GAAN9F,OAAU0G,EAAI,UAAA1G,OAAIoB,EAAE,OAAApB,QAAiB,IAAX8F,EAAeA,EAAK,aAAA9F,OAAgBoB,GAChE,EAYIuF,mBAAoB,CAAC,EAAG,KAG9B,ECOA,EApDkB,WAChB,IAEIC,EAFJzH,GAA2CC,EAAAA,EAAAA,KAAnCwD,EAAYzD,EAAZyD,aAAcP,EAAKlD,EAALkD,MAwCtB,OAnCEuE,EALoCzH,EAAToD,WAKZnC,EAAAA,EAAAA,KAACyG,EAAAA,EAAc,IACrBxE,GAEPjC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CACTU,GAAI,CACF+F,OAAQ,OACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UACZ1G,SACH,mBAIOqC,GAAwC,IAAxBA,EAAazC,QAerCC,EAAAA,EAAAA,KAAC8G,EAAU,CAAA3G,UACTH,EAAAA,EAAAA,KAAC+G,EAAiB,OAdpB/G,EAAAA,EAAAA,KAAA,OACEiB,MAAO,CACLyF,OAAQ,QACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UACZ1G,UAEFH,EAAAA,EAAAA,KAAA,OAAAG,SAAK,mBAYToB,EAAAA,EAAAA,MAAA,QAAMyF,UAAU,GAAE7G,SAAA,EAChBH,EAAAA,EAAAA,KAACiH,EAAAA,EAAU,KACXjH,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACS,QAAQ,KAAK4D,UAAU,KAAK1D,SAAS,GAAET,SAAC,4BAGnDqG,IAGP,C","sources":["components/BreadCrumb.tsx","components/LoadingSpinner.tsx","hooks/useDatabaseValues.tsx","pages/home/table/BooksTable.tsx","pages/home/table/PaginationInTable.tsx","pages/home/IndexHome.tsx"],"sourcesContent":["import NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { Link as RouterLink, useLocation, useParams } from \"react-router-dom\";\r\nimport useDatabaseValues from \"../hooks/useDatabaseValues\";\r\n\r\nconst Breadcrumb = () => {\r\n  const { bookIdUrl, authorUrl } = useParams();\r\n  const location = useLocation();\r\n  const { bookDetails, authorBooks } = useDatabaseValues(bookIdUrl, authorUrl);\r\n\r\n  let currentLink = \"\";\r\n\r\n  const crumbs = location.pathname.split(\"/\").filter(crumb => crumb !== \"\");\r\n\r\n  const crumbsToPrint = crumbs.map((crumb, idx) => {\r\n    currentLink += `/${crumb}`;\r\n\r\n    let crumbsToPrint;\r\n\r\n    if (bookDetails?.authorName === undefined && authorBooks?.length === 0) {\r\n      crumbsToPrint = <Typography color=\"error\"> Brak danych </Typography>;\r\n    } else if (crumb === \"undefined\") {\r\n      crumbsToPrint = <Typography color=\"error\"> Brak danych </Typography>;\r\n    } else if (crumbs.length === 3 && idx === crumbs.length - 1) {\r\n      crumbsToPrint = bookDetails?.bookTitle ?? \"\";\r\n    } else if (crumbs.includes(\"author\")) {\r\n      crumbsToPrint = authorBooks?.[0]?.authorName ?? \"\";\r\n    } else if (crumbs.includes(\"books\")) {\r\n      crumbsToPrint = bookDetails?.bookTitle ?? \"\";\r\n    }\r\n\r\n    if (crumb === \"author\" || crumb === \"books\") {\r\n      return null;\r\n    }\r\n\r\n    if (idx === crumbs.length - 1) {\r\n      return (\r\n        <Typography\r\n          key={crypto.randomUUID()}\r\n          variant=\"body1\"\r\n          sx={{ fontSize: \"2rem\" }}\r\n        >\r\n          {crumbsToPrint}\r\n        </Typography>\r\n      );\r\n    } else {\r\n      return (\r\n        <RouterLink\r\n          key={crypto.randomUUID()}\r\n          to={currentLink}\r\n          style={{ fontSize: \"2rem\", cursor: \"pointer\" }}\r\n        >\r\n          {crumbsToPrint}\r\n        </RouterLink>\r\n      );\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Box m={2} p={2} bgcolor=\"#f5f5f5\">\r\n      <Breadcrumbs\r\n        aria-label=\"breadcrumb\"\r\n        separator={<NavigateNextIcon fontSize=\"small\" />}\r\n      >\r\n        {location.pathname === \"/\" ? (\r\n          <Typography variant=\"body1\" sx={{ fontSize: \"2rem\" }}>\r\n            Lista\r\n          </Typography>\r\n        ) : (\r\n          <RouterLink to={`/`} style={{ fontSize: \"2rem\", cursor: \"pointer\" }}>\r\n            Lista\r\n          </RouterLink>\r\n        )}\r\n\r\n        {crumbsToPrint}\r\n      </Breadcrumbs>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Breadcrumb;\r\n","import CircularProgress from \"@mui/material/CircularProgress\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\nconst LoadingSpinner = () => {\r\n  return (\r\n    <Box>\r\n      <CircularProgress color=\"inherit\" />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import { useLocation } from \"react-router-dom\";\r\nimport { useBooksQuery } from \"../services/ApiSlice\";\r\n\r\ninterface ModelBookToPrint {\r\n  id: string;\r\n  bookTitle: string;\r\n  authorName: string;\r\n  publishedDate: string;\r\n  bookCover: string;\r\n  publisher: string;\r\n  pageCount: number;\r\n  description: string;\r\n}\r\n\r\ninterface ModelDatabaseValues {\r\n  booksToPrint?: ModelBookToPrint[];\r\n  bookDetails?: ModelBookToPrint;\r\n  authorBooks?: ModelBookToPrint[];\r\n  error?: {};\r\n  isSuccess: boolean;\r\n  isLoading:any\r\n}\r\n\r\nconst useDatabaseValues = (\r\n  bookIdUrl: string = \"default\",\r\n  authorUrl: string = \"default\"\r\n): ModelDatabaseValues => {\r\n  const location = useLocation();\r\n  const { data, error, isSuccess, isLoading } = useBooksQuery();\r\n\r\n  const volumesData = data?.items?.map((volume: { [key: string]: any }) => {\r\n    return volume?.volumeInfo;\r\n  });\r\n\r\n  const booksToPrint = volumesData?.map(\r\n    (volume: { [key: string]: any }, idx: number) => {\r\n      return {\r\n        id: data?.items[idx].id,\r\n        bookTitle: volume.title,\r\n        authorName: volume?.authors?.join(\", \"),\r\n        publishedDate: volume.publishedDate,\r\n        bookCover: volume.imageLinks.thumbnail,\r\n        publisher: volume.publisher,\r\n        pageCount: volume.pageCount,\r\n        description: volume.description,\r\n      };\r\n    }\r\n  );\r\n\r\n  const bookDetails = booksToPrint?.find(({ id }) => {\r\n    return id === bookIdUrl;\r\n  });\r\n\r\n  const authorBooks =\r\n    authorUrl !== \"undefined\"\r\n      ? booksToPrint?.filter(({ authorName }) => {\r\n          return authorName?.toLowerCase() === authorUrl?.replaceAll(\"-\", \" \");\r\n        })\r\n      : [];\r\n\r\n  // console.log(\"bookdetails\", authorBooks);\r\n\r\n  return { booksToPrint, isLoading, bookDetails, authorBooks, error, isSuccess };\r\n};\r\n\r\nexport default useDatabaseValues;\r\n","import Paper from \"@mui/material/Paper\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport { ReactNode } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport useDatabaseValues from \"../../../hooks/useDatabaseValues\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport { Typography } from \"@mui/material\";\r\n\r\ninterface Props {\r\n  children: ReactNode;\r\n}\r\n\r\nconst BooksTable = (props: Props) => {\r\n  const navigate = useNavigate();\r\n  const { booksToPrint } = useDatabaseValues();\r\n  const { page, rowsPerPage } = useSelector(\r\n    (state: RootState) => state.tableBooks\r\n  );\r\n\r\n  const displayedBooks = booksToPrint?.slice(\r\n    page * rowsPerPage,\r\n    page * rowsPerPage + rowsPerPage\r\n  );\r\n\r\n  const handleBookClick = (id: string) => {\r\n    navigate(`/books/${id}`);\r\n  };\r\n\r\n  const handleAuthorClick = (authorName: string) => {\r\n    const authorToUrl = authorName?.replaceAll(\" \", \"-\").toLowerCase();\r\n    navigate(`/author/${authorToUrl}`);\r\n  };\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Nr</TableCell>\r\n            <TableCell>Autor</TableCell>\r\n            <TableCell>Tytuł</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {displayedBooks?.map(\r\n            ({ id, bookTitle, authorName }: any, idx: number) => {\r\n              return (\r\n                <TableRow\r\n                  key={id}\r\n                  //   sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n                >\r\n                  <TableCell>{page * rowsPerPage + idx + 1}</TableCell>\r\n                  <TableCell\r\n                    onClick={() => handleAuthorClick(authorName)}\r\n                    sx={{\r\n                      \":hover\": {\r\n                        backgroundColor: theme => theme.palette.secondary.main,\r\n                      },\r\n                      cursor: \"pointer\",\r\n                    }}\r\n                  >\r\n                    {!authorName ? (\r\n                      <Typography color=\"error\">Brak autora</Typography>\r\n                    ) : (\r\n                      authorName\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    onClick={() => handleBookClick(id)}\r\n                    sx={{\r\n                      \":hover\": { backgroundColor: \"red\" },\r\n                      cursor: \"pointer\",\r\n                    }}\r\n                  >\r\n                    {!bookTitle ? (\r\n                      <Typography color=\"error\">Brak tytułu</Typography>\r\n                    ) : (\r\n                      bookTitle\r\n                    )}\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            }\r\n          )}\r\n        </TableBody>\r\n      </Table>\r\n      {props.children}\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default BooksTable;\r\n","import TablePagination from \"@mui/material/TablePagination\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport useDatabaseValues from \"../../../hooks/useDatabaseValues\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport {\r\n  handleChangeTablePage,\r\n  handleChangeTableRowsPerPage,\r\n} from \"../../../redux/storeFeatures/tableBooksSlice\";\r\n\r\ninterface ModelRowsParams {\r\n  from: number;\r\n  to: number;\r\n  count: number;\r\n}\r\n\r\nconst PaginationInTable = () => {\r\n  const dispatch = useDispatch();\r\n  const { booksToPrint } = useDatabaseValues();\r\n  const { page, rowsPerPage } = useSelector(\r\n    (state: RootState) => state.tableBooks\r\n  );\r\n\r\n  const handleChangePage = (\r\n    event: React.MouseEvent<HTMLButtonElement> | null,\r\n    newPage: number\r\n  ) => {\r\n    dispatch(handleChangeTablePage(newPage));\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (\r\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => {\r\n    dispatch(handleChangeTableRowsPerPage(parseInt(event.target.value)));\r\n  };\r\n\r\n  const defaultLabelDisplayedRows = ({ from, to, count }: ModelRowsParams) => {\r\n    return `${from}–${to} z ${count !== -1 ? count : `more than ${to}`}`;\r\n  };\r\n\r\n  return (\r\n    <TablePagination\r\n      component=\"div\"\r\n      count={booksToPrint?.length ?? 0}\r\n      page={page}\r\n      onPageChange={handleChangePage}\r\n      rowsPerPage={rowsPerPage}\r\n      onRowsPerPageChange={handleChangeRowsPerPage}\r\n      labelRowsPerPage={<span>Liczba wpisów na stronie</span>}\r\n      labelDisplayedRows={defaultLabelDisplayedRows}\r\n      rowsPerPageOptions={[5, 10]}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PaginationInTable;\r\n","import Typography from \"@mui/material/Typography\";\r\nimport Breadcrumb from \"../../components/BreadCrumb\";\r\nimport LoadingSpinner from \"../../components/LoadingSpinner\";\r\nimport useDatabaseValues from \"../../hooks/useDatabaseValues\";\r\nimport BooksTable from \"./table/BooksTable\";\r\nimport PaginationInTable from \"./table/PaginationInTable\";\r\n\r\nconst IndexHome = () => {\r\n  const { booksToPrint, error, isLoading } = useDatabaseValues();\r\n\r\n  let tableContent;\r\n\r\n  if (isLoading) {\r\n    tableContent = <LoadingSpinner />;\r\n  } else if (error) {\r\n    tableContent = (\r\n      <Typography\r\n        sx={{\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        Błąd\r\n      </Typography>\r\n    );\r\n  } else if (!booksToPrint || booksToPrint.length === 0) {\r\n    tableContent = (\r\n      <div\r\n        style={{\r\n          height: \"100vh\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <div>Brak danych</div>\r\n      </div>\r\n    );\r\n  } else {\r\n    tableContent = (\r\n      <BooksTable>\r\n        <PaginationInTable />\r\n      </BooksTable>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <main className=\"\">\r\n      <Breadcrumb />\r\n      <Typography variant=\"h1\" component=\"h1\" fontSize=\"\">\r\n        Lista książek\r\n      </Typography>\r\n      {tableContent}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default IndexHome;\r\n"],"names":["_useParams","useParams","bookIdUrl","authorUrl","location","useLocation","_useDatabaseValues","useDatabaseValues","bookDetails","authorBooks","currentLink","crumbs","pathname","split","filter","crumb","crumbsToPrint","map","idx","concat","undefined","authorName","length","_jsx","Typography","color","children","_bookDetails$bookTitl","bookTitle","includes","_authorBooks$0$author","_authorBooks$","_bookDetails$bookTitl2","variant","sx","fontSize","crypto","randomUUID","RouterLink","to","style","cursor","Box","m","p","bgcolor","_jsxs","Breadcrumbs","separator","NavigateNextIcon","CircularProgress","_data$items","arguments","_useBooksQuery","useBooksQuery","data","error","isSuccess","isLoading","volumesData","items","volume","volumeInfo","booksToPrint","_volume$authors","id","title","authors","join","publishedDate","bookCover","imageLinks","thumbnail","publisher","pageCount","description","find","_ref","_ref2","toLowerCase","replaceAll","props","navigate","useNavigate","_useSelector","useSelector","state","tableBooks","page","rowsPerPage","displayedBooks","slice","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","onClick","authorToUrl","handleAuthorClick","backgroundColor","theme","palette","secondary","main","handleBookClick","_booksToPrint$length","dispatch","useDispatch","TablePagination","count","onPageChange","event","newPage","handleChangeTablePage","onRowsPerPageChange","handleChangeTableRowsPerPage","parseInt","target","value","labelRowsPerPage","labelDisplayedRows","from","rowsPerPageOptions","tableContent","LoadingSpinner","height","display","justifyContent","alignItems","BooksTable","PaginationInTable","className","Breadcrumb"],"sourceRoot":""}