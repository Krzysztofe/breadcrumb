{"version":3,"file":"static/js/992.6f60fccb.chunk.js","mappings":"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","sources":["components/BreadCrumb.tsx","components/LoadingSpinner.tsx","hooks/useDatabaseValues.tsx","pages/authorDetails/AuthorTable.tsx","pages/authorDetails/IndexAuthorDetails.tsx"],"sourcesContent":["import NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { Link as RouterLink, useLocation, useParams } from \"react-router-dom\";\r\nimport useDatabaseValues from \"../hooks/useDatabaseValues\";\r\n\r\nconst Breadcrumb = () => {\r\n  const { bookIdUrl, authorUrl } = useParams();\r\n  const location = useLocation();\r\n  const { bookDetails, authorBooks } = useDatabaseValues(bookIdUrl, authorUrl);\r\n\r\n  let currentLink = \"\";\r\n\r\n  const crumbs = location.pathname.split(\"/\").filter(crumb => crumb !== \"\");\r\n\r\n  const crumbsToPrint = crumbs.map((crumb, idx) => {\r\n    currentLink += `/${crumb}`;\r\n\r\n    let crumbsToPrint;\r\n\r\n    if (bookDetails?.authorName === undefined && authorBooks?.length === 0) {\r\n      crumbsToPrint = <Typography color=\"error\"> Brak danych </Typography>;\r\n    } else if (crumb === \"undefined\") {\r\n      crumbsToPrint = <Typography color=\"error\"> Brak danych </Typography>;\r\n    } else if (crumbs.length === 3 && idx === crumbs.length - 1) {\r\n      crumbsToPrint = bookDetails?.bookTitle ?? \"\";\r\n    } else if (crumbs.includes(\"author\")) {\r\n      crumbsToPrint = authorBooks?.[0]?.authorName ?? \"\";\r\n    } else if (crumbs.includes(\"books\")) {\r\n      crumbsToPrint = bookDetails?.bookTitle ?? \"\";\r\n    }\r\n\r\n    if (crumb === \"author\" || crumb === \"books\") {\r\n      return null;\r\n    }\r\n\r\n    if (idx === crumbs.length - 1) {\r\n      return (\r\n        <Typography\r\n          key={crypto.randomUUID()}\r\n          variant=\"body1\"\r\n          sx={{ fontSize: \"2rem\" }}\r\n        >\r\n          {crumbsToPrint}\r\n        </Typography>\r\n      );\r\n    } else {\r\n      return (\r\n        <RouterLink\r\n          key={crypto.randomUUID()}\r\n          to={currentLink}\r\n          style={{ fontSize: \"2rem\", cursor: \"pointer\" }}\r\n        >\r\n          {crumbsToPrint}\r\n        </RouterLink>\r\n      );\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Box m={2} p={2} bgcolor=\"#f5f5f5\">\r\n      <Breadcrumbs\r\n        aria-label=\"breadcrumb\"\r\n        separator={<NavigateNextIcon fontSize=\"small\" />}\r\n      >\r\n        {location.pathname === \"/\" ? (\r\n          <Typography variant=\"body1\" sx={{ fontSize: \"2rem\" }}>\r\n            Lista\r\n          </Typography>\r\n        ) : (\r\n          <RouterLink to={`/`} style={{ fontSize: \"2rem\", cursor: \"pointer\" }}>\r\n            Lista\r\n          </RouterLink>\r\n        )}\r\n\r\n        {crumbsToPrint}\r\n      </Breadcrumbs>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Breadcrumb;\r\n","import CircularProgress from \"@mui/material/CircularProgress\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\nconst LoadingSpinner = () => {\r\n  return (\r\n    <Box>\r\n      <CircularProgress color=\"inherit\" />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import { useLocation } from \"react-router-dom\";\r\nimport { useBooksQuery } from \"../services/ApiSlice\";\r\n\r\ninterface ModelBookToPrint {\r\n  id: string;\r\n  bookTitle: string;\r\n  authorName: string;\r\n  publishedDate: string;\r\n  bookCover: string;\r\n  publisher: string;\r\n  pageCount: number;\r\n  description: string;\r\n}\r\n\r\ninterface ModelDatabaseValues {\r\n  booksToPrint?: ModelBookToPrint[];\r\n  bookDetails?: ModelBookToPrint;\r\n  authorBooks?: ModelBookToPrint[];\r\n  error?: {};\r\n  isSuccess: boolean;\r\n  isLoading:any\r\n}\r\n\r\nconst useDatabaseValues = (\r\n  bookIdUrl: string = \"default\",\r\n  authorUrl: string = \"default\"\r\n): ModelDatabaseValues => {\r\n  const location = useLocation();\r\n  const { data, error, isSuccess, isLoading } = useBooksQuery();\r\n\r\n  const volumesData = data?.items?.map((volume: { [key: string]: any }) => {\r\n    return volume?.volumeInfo;\r\n  });\r\n\r\n  const booksToPrint = volumesData?.map(\r\n    (volume: { [key: string]: any }, idx: number) => {\r\n      return {\r\n        id: data?.items[idx].id,\r\n        bookTitle: volume.title,\r\n        authorName: volume?.authors?.join(\", \"),\r\n        publishedDate: volume.publishedDate,\r\n        bookCover: volume.imageLinks.thumbnail,\r\n        publisher: volume.publisher,\r\n        pageCount: volume.pageCount,\r\n        description: volume.description,\r\n      };\r\n    }\r\n  );\r\n\r\n  const bookDetails = booksToPrint?.find(({ id }) => {\r\n    return id === bookIdUrl;\r\n  });\r\n\r\n  const authorBooks =\r\n    authorUrl !== \"undefined\"\r\n      ? booksToPrint?.filter(({ authorName }) => {\r\n          return authorName?.toLowerCase() === authorUrl?.replaceAll(\"-\", \" \");\r\n        })\r\n      : [];\r\n\r\n  // console.log(\"bookdetails\", authorBooks);\r\n\r\n  return { booksToPrint, isLoading, bookDetails, authorBooks, error, isSuccess };\r\n};\r\n\r\nexport default useDatabaseValues;\r\n","import Paper from \"@mui/material/Paper\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport useDatabaseValues from \"../../hooks/useDatabaseValues\";\r\n\r\nconst AuthorTable = () => {\r\n  const navigate = useNavigate();\r\n  const { bookIdUrl, authorUrl } = useParams();\r\n\r\n  const { authorBooks } = useDatabaseValues(\r\n    bookIdUrl,\r\n    authorUrl\r\n  );\r\n\r\n  const handleBookClick = (id: string) => {\r\n    navigate(`/author/${authorUrl}/${id}`);\r\n  };\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Nr</TableCell>\r\n            <TableCell>Autor</TableCell>\r\n            <TableCell>Tytuł</TableCell>\r\n            <TableCell>Rok wydania</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {authorBooks?.map(\r\n            ({ bookTitle, authorName, id, publishedDate }, idx) => {\r\n              return (\r\n                <TableRow\r\n                  key={id}\r\n                  onClick={() => handleBookClick(id)}\r\n                  sx={{\r\n                    \":hover\": { backgroundColor: \"red\" },\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                >\r\n                  <TableCell>{idx + 1}</TableCell>\r\n                  <TableCell>{authorName}</TableCell>\r\n                  <TableCell>\r\n                    {!bookTitle ? (\r\n                      <Typography style={{ color: \"red\" }}>\r\n                        Brak tytułu\r\n                      </Typography>\r\n                    ) : (\r\n                      <Typography>{bookTitle}</Typography>\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {!publishedDate ? (\r\n                      <Typography style={{ color: \"red\" }}>\r\n                        Brak daty\r\n                      </Typography>\r\n                    ) : (\r\n                      <Typography>{publishedDate}</Typography>\r\n                    )}\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            }\r\n          )}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default AuthorTable;\r\n","import Typography from \"@mui/material/Typography\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Breadcrumb from \"../../components/BreadCrumb\";\r\nimport LoadingSpinner from \"../../components/LoadingSpinner\";\r\nimport useDatabaseValues from \"../../hooks/useDatabaseValues\";\r\nimport AuthorTable from \"./AuthorTable\";\r\n\r\nconst IndexAuthorDetails = () => {\r\n  const { bookIdUrl, authorUrl } = useParams();\r\n  const { authorBooks, error, isLoading } = useDatabaseValues(\r\n    bookIdUrl,\r\n    authorUrl\r\n  );\r\n\r\n  let tableContent;\r\n\r\n  if (isLoading) {\r\n    tableContent = <LoadingSpinner />;\r\n  } else if (error) {\r\n    tableContent = (\r\n      <Typography\r\n        sx={{\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        Błąd\r\n      </Typography>\r\n    );\r\n  } else if (!authorBooks || authorBooks.length === 0) {\r\n    tableContent = (\r\n      <main\r\n        style={{\r\n          height: \"100vh\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <div>Brak danych</div>\r\n      </main>\r\n    );\r\n  } else {\r\n    tableContent = <AuthorTable />;\r\n  }\r\n\r\n  return (\r\n    <main>\r\n      <Breadcrumb />\r\n      <Typography variant=\"h2\" component=\"h2\" fontSize=\"\">\r\n        Lista książek wybranego autora\r\n      </Typography>\r\n      {tableContent}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default IndexAuthorDetails;\r\n"],"names":["_useParams","useParams","bookIdUrl","authorUrl","location","useLocation","_useDatabaseValues","useDatabaseValues","bookDetails","authorBooks","currentLink","crumbs","pathname","split","filter","crumb","crumbsToPrint","map","idx","concat","undefined","authorName","length","_jsx","Typography","color","children","_bookDetails$bookTitl","bookTitle","includes","_authorBooks$0$author","_authorBooks$","_bookDetails$bookTitl2","variant","sx","fontSize","crypto","randomUUID","RouterLink","to","style","cursor","Box","m","p","bgcolor","_jsxs","Breadcrumbs","separator","NavigateNextIcon","CircularProgress","_data$items","arguments","_useBooksQuery","useBooksQuery","data","error","isSuccess","isLoading","volumesData","items","volume","volumeInfo","booksToPrint","_volume$authors","id","title","authors","join","publishedDate","bookCover","imageLinks","thumbnail","publisher","pageCount","description","find","_ref","_ref2","toLowerCase","replaceAll","navigate","useNavigate","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","onClick","handleBookClick","backgroundColor","tableContent","LoadingSpinner","height","display","justifyContent","alignItems","AuthorTable","Breadcrumb"],"sourceRoot":""}