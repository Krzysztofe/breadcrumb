{"version":3,"file":"static/js/590.1e4b47ed.chunk.js","mappings":"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","sources":["components/BreadCrumb.tsx","hooks/useDatabaseValues.tsx","hooks/useHttpRequestsContent.tsx","pages/home/table/BooksTable.tsx","pages/home/table/PaginationInTable.tsx","pages/home/IndexHome.tsx"],"sourcesContent":["import NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Link from \"@mui/material/Link\";\r\nimport { Link as RouterLink, useLocation, useParams } from \"react-router-dom\";\r\nimport useDatabaseValues from \"../hooks/useDatabaseValues\";\r\n\r\nconst Breadcrumb = () => {\r\n  const { bookIdUrl, authorUrl } = useParams();\r\n  const location = useLocation();\r\n  const { bookDetails, authorBooks } = useDatabaseValues(bookIdUrl, authorUrl);\r\n\r\n  let currentLink = \"\";\r\n\r\n  const crumbs = location.pathname.split(\"/\").filter(crumb => crumb !== \"\");\r\n\r\n  const crumbsToPrint = crumbs.map((crumb, idx) => {\r\n    currentLink += `/${crumb}`;\r\n\r\n    let crumbsToPrint;\r\n\r\n    if (bookDetails?.authorName === undefined && authorBooks?.length === 0) {\r\n      crumbsToPrint = <Typography color=\"error\"> Brak danych </Typography>;\r\n    } else if (crumb === \"undefined\") {\r\n      crumbsToPrint = <Typography color=\"error\"> Brak danych </Typography>;\r\n    } else if (crumbs.length === 3 && idx === crumbs.length - 1) {\r\n      crumbsToPrint = bookDetails?.bookTitle ?? \"\";\r\n    } else if (crumbs.includes(\"author\")) {\r\n      crumbsToPrint = authorBooks?.[0]?.authorName ?? \"\";\r\n    } else if (crumbs.includes(\"books\")) {\r\n      crumbsToPrint = bookDetails?.bookTitle ?? \"\";\r\n    }\r\n\r\n    if (crumb === \"author\" || crumb === \"books\") {\r\n      return null;\r\n    }\r\n\r\n    if (idx === crumbs.length - 1) {\r\n      return (\r\n        <Typography\r\n          key={crypto.randomUUID()}\r\n          color=\"info.main\"\r\n          variant=\"h3\"\r\n        >\r\n          {crumbsToPrint}\r\n        </Typography>\r\n      );\r\n    } else {\r\n      return (\r\n        <RouterLink\r\n          key={crypto.randomUUID()}\r\n          to={currentLink}\r\n          style={{ textDecoration: \"none\" }}\r\n        >\r\n          <Typography\r\n            color=\"info.main\"\r\n            variant=\"h3\"\r\n            sx={{\r\n              \":hover\": { color: \"secondary.main\" },\r\n              cursor: \"pointer\",\r\n            }}\r\n          >\r\n            {crumbsToPrint}\r\n          </Typography>\r\n        </RouterLink>\r\n      );\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Box my={2} p={2} bgcolor=\"primary.main\">\r\n      <Breadcrumbs\r\n        aria-label=\"breadcrumb\"\r\n        separator={\r\n          <NavigateNextIcon fontSize=\"small\" sx={{ color: \"info.main\" }} />\r\n        }\r\n      >\r\n        {location.pathname === \"/\" ? (\r\n          <Typography variant=\"h3\" color=\"info.main\">\r\n            Lista\r\n          </Typography>\r\n        ) : (\r\n          <RouterLink\r\n            to={`/`}\r\n            style={{\r\n              textDecoration: \"none\",\r\n            }}\r\n          >\r\n            <Typography\r\n              color=\"info.main\"\r\n              variant=\"h3\"\r\n              sx={{\r\n                \":hover\": { color: \"secondary.main\" },\r\n                cursor: \"pointer\",\r\n              }}\r\n            >\r\n              Lista\r\n            </Typography>\r\n          </RouterLink>\r\n        )}\r\n\r\n        {crumbsToPrint}\r\n      </Breadcrumbs>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Breadcrumb;\r\n","import { useBooksQuery } from \"../services/ApiSlice\";\r\n\r\ninterface ModelBookToPrint {\r\n  id: string;\r\n  bookTitle: string;\r\n  authorName: string;\r\n  publishedDate: string;\r\n  bookCover: string;\r\n  description: string;\r\n}\r\n\r\ninterface ModelDatabaseValues {\r\n  booksToPrint?: ModelBookToPrint[];\r\n  bookDetails?: ModelBookToPrint;\r\n  authorBooks?: ModelBookToPrint[];\r\n  error?: {};\r\n  isLoading: boolean;\r\n}\r\n\r\nconst useDatabaseValues = (\r\n  bookIdUrl: string = \"default\",\r\n  authorUrl: string = \"default\"\r\n): ModelDatabaseValues => {\r\n  const { data, error, isLoading } = useBooksQuery();\r\n\r\n  const volumesData = data?.items?.map((volume: { [key: string]: any }) => {\r\n    return volume?.volumeInfo;\r\n  });\r\n\r\n  const booksToPrint = volumesData?.map(\r\n    (volume: { [key: string]: any }, idx: number) => {\r\n      return {\r\n        id: data?.items[idx].id,\r\n        bookTitle: volume.title,\r\n        authorName: volume?.authors?.join(\", \"),\r\n        publishedDate: volume.publishedDate,\r\n        bookCover: volume.imageLinks.thumbnail,\r\n        description: volume.description,\r\n      };\r\n    }\r\n  );\r\n\r\n  const bookDetails = booksToPrint?.find(({ id }) => {\r\n    return id === bookIdUrl;\r\n  });\r\n\r\n  const authorBooks =\r\n    authorUrl !== \"undefined\"\r\n      ? booksToPrint?.filter(({ authorName }) => {\r\n          return authorName?.toLowerCase() === authorUrl?.replaceAll(\"-\", \" \");\r\n        })\r\n      : [];\r\n\r\n  return { booksToPrint, isLoading, bookDetails, authorBooks, error };\r\n};\r\n\r\nexport default useDatabaseValues;\r\n","import useDatabaseValues from \"./useDatabaseValues\";\r\nimport Box from \"@mui/material/Box\";\r\nimport LoadingSpinner from \"../components/LoadingSpinner\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport React from \"react\";\r\n\r\nconst useHttpRequestsContent = (\r\n  JSXContent: React.ReactNode,\r\n  bookIdUrl?: string,\r\n  authorUrl?: string\r\n) => {\r\n  const { booksToPrint, error, isLoading } = useDatabaseValues(\r\n    bookIdUrl,\r\n    authorUrl\r\n  );\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Box sx={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        <LoadingSpinner />\r\n      </Box>\r\n    );\r\n  } else if (error) {\r\n    if (\"status\" in error) {\r\n      const errMsg = \"status\" in error && error.status;\r\n\r\n      return (\r\n        <Typography variant=\"h2\" color=\"error\" sx={{ textAlign: \"center\" }}>\r\n          <> Błąd: {errMsg}</>\r\n        </Typography>\r\n      );\r\n    }\r\n  } else if (!booksToPrint) {\r\n    return (\r\n      <Typography variant=\"h2\" color=\"error\" sx={{ textAlign: \"center\" }}>\r\n        Brak danych\r\n      </Typography>\r\n    );\r\n  } else {\r\n    return JSXContent;\r\n  }\r\n};\r\n\r\nexport default useHttpRequestsContent;\r\n","import { Typography } from \"@mui/material\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport { ReactNode } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport useDatabaseValues from \"../../../hooks/useDatabaseValues\";\r\nimport { RootState } from \"../../../redux/store\";\r\n\r\ninterface Props {\r\n  children: ReactNode;\r\n}\r\n\r\ninterface ModelBookToDisplay {\r\n  id: string;\r\n  bookTitle: string;\r\n  authorName: string;\r\n}\r\n\r\nconst BooksTable = (props: Props) => {\r\n  const navigate = useNavigate();\r\n\r\n  const { booksToPrint } = useDatabaseValues();\r\n  const { page, rowsPerPage } = useSelector(\r\n    (state: RootState) => state.tableBooks\r\n  );\r\n\r\n  const displayedBooks = booksToPrint?.slice(\r\n    page * rowsPerPage,\r\n    page * rowsPerPage + rowsPerPage\r\n  );\r\n\r\n  const handleBookClick = (id: string, authorName: string) => {\r\n    const authorToUrl = authorName?.replaceAll(\" \", \"-\").toLowerCase();\r\n\r\n    navigate(`/author/${authorToUrl}/${id}`);\r\n  };\r\n\r\n  const handleAuthorClick = (authorName: string) => {\r\n    const authorToUrl = authorName?.replaceAll(\" \", \"-\").toLowerCase();\r\n    navigate(`/author/${authorToUrl}`);\r\n  };\r\n\r\n  return (\r\n    <TableContainer sx={{ padding: { xs: 1, sm: 0 } }}>\r\n      <Table aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            {[\"Nr\", \"Autor\", \"Tytuł\"].map((header, idx) => {\r\n              return (\r\n                <TableCell\r\n                  key={header}\r\n                  sx={{ width: idx === 0 ? \"10%\" : \"30%\" }}\r\n                >\r\n                  <Typography variant=\"h2\" component=\"span\">\r\n                    {header}\r\n                  </Typography>\r\n                </TableCell>\r\n              );\r\n            })}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {displayedBooks?.map(\r\n            (\r\n              { id, bookTitle, authorName }: ModelBookToDisplay,\r\n              idx: number\r\n            ) => {\r\n              return (\r\n                <TableRow\r\n                  key={id}\r\n                  sx={{\r\n                    backgroundColor: idx % 2 === 1 ? \"primary.main\" : \"inherit\",\r\n                  }}\r\n                >\r\n                  <TableCell>\r\n                    <Typography component=\"span\">\r\n                      {page * rowsPerPage + idx + 1}\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell\r\n                    onClick={() => handleAuthorClick(authorName)}\r\n                    sx={{\r\n                      \":hover\": { backgroundColor: \"secondary.main\" },\r\n                      cursor: \"pointer\",\r\n                    }}\r\n                  >\r\n                    {!authorName ? (\r\n                      <Typography color=\"error\" component=\"span\">\r\n                        Brak autora\r\n                      </Typography>\r\n                    ) : (\r\n                      <Typography component=\"span\"> {authorName} </Typography>\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    onClick={() => handleBookClick(id, authorName)}\r\n                    sx={{\r\n                      \":hover\": { backgroundColor: \"secondary.main\" },\r\n                      cursor: \"pointer\",\r\n                    }}\r\n                  >\r\n                    {!bookTitle ? (\r\n                      <Typography component=\"span\" color=\"error\">\r\n                        Brak tytułu\r\n                      </Typography>\r\n                    ) : (\r\n                      <Typography component=\"span\">{bookTitle}</Typography>\r\n                    )}\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            }\r\n          )}\r\n        </TableBody>\r\n      </Table>\r\n      {props.children}\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default BooksTable;\r\n","import TablePagination from \"@mui/material/TablePagination\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport useDatabaseValues from \"../../../hooks/useDatabaseValues\";\r\nimport { RootState } from \"../../../redux/store\";\r\nimport {\r\n  handleChangeTablePage,\r\n  handleChangeTableRowsPerPage,\r\n} from \"../../../redux/storeFeatures/tableBooksSlice\";\r\n\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\ninterface ModelRowsParams {\r\n  from: number;\r\n  to: number;\r\n  count: number;\r\n}\r\n\r\nconst PaginationInTable = () => {\r\n  const dispatch = useDispatch();\r\n  const { booksToPrint } = useDatabaseValues();\r\n  const { page, rowsPerPage } = useSelector(\r\n    (state: RootState) => state.tableBooks\r\n  );\r\n\r\n  const handleChangePage = (\r\n    event: React.MouseEvent<HTMLButtonElement> | null,\r\n    newPage: number\r\n  ) => {\r\n    dispatch(handleChangeTablePage(newPage));\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (\r\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => {\r\n    dispatch(handleChangeTableRowsPerPage(parseInt(event.target.value)));\r\n  };\r\n\r\n  const defaultLabelDisplayedRows = ({ from, to, count }: ModelRowsParams) => {\r\n    return (\r\n      <Typography component=\"span\">\r\n        {from}–{to} z {count !== -1 ? count : to}\r\n      </Typography>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <TablePagination\r\n      component=\"div\"\r\n      count={booksToPrint?.length ?? 0}\r\n      page={page}\r\n      onPageChange={handleChangePage}\r\n      rowsPerPage={rowsPerPage}\r\n      onRowsPerPageChange={handleChangeRowsPerPage}\r\n      labelRowsPerPage={\r\n        <Typography component=\"span\">Liczba wpisów na stronie</Typography>\r\n      }\r\n      labelDisplayedRows={defaultLabelDisplayedRows}\r\n      rowsPerPageOptions={[5, 10]}\r\n  \r\n    />\r\n  );\r\n};\r\n\r\nexport default PaginationInTable;\r\n","import Container from \"@mui/material/Container\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Breadcrumb from \"../../components/BreadCrumb\";\r\nimport useHttpRequestsContent from \"../../hooks/useHttpRequestsContent\";\r\nimport BooksTable from \"./table/BooksTable\";\r\nimport PaginationInTable from \"./table/PaginationInTable\";\r\n\r\nconst IndexHome = () => {\r\n \r\n  const tableContent = useHttpRequestsContent(\r\n    <BooksTable>\r\n      <PaginationInTable />\r\n    </BooksTable>\r\n  );\r\n  \r\n  return (\r\n    <main>\r\n      <Container sx={{ padding: { xs: 0, sm: 2 } }}>\r\n        <Breadcrumb />\r\n        <Typography\r\n          variant=\"h1\"\r\n          component=\"h1\"\r\n          sx={{ padding: { xs: 1 }, paddingLeft: { xs: 1, sm: 0 } }}\r\n        >\r\n          Lista książek\r\n        </Typography>\r\n        {tableContent}\r\n      </Container>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default IndexHome;\r\n\r\n"],"names":["_useParams","useParams","bookIdUrl","authorUrl","location","useLocation","_useDatabaseValues","useDatabaseValues","bookDetails","authorBooks","currentLink","crumbs","pathname","split","filter","crumb","crumbsToPrint","map","idx","concat","undefined","authorName","length","_jsx","Typography","color","children","_bookDetails$bookTitl","bookTitle","includes","_authorBooks$0$author","_authorBooks$","_bookDetails$bookTitl2","variant","crypto","randomUUID","RouterLink","to","style","textDecoration","sx","cursor","Box","my","p","bgcolor","_jsxs","Breadcrumbs","separator","NavigateNextIcon","fontSize","_data$items","arguments","_useBooksQuery","useBooksQuery","data","error","isLoading","volumesData","items","volume","volumeInfo","booksToPrint","_volume$authors","id","title","authors","join","publishedDate","bookCover","imageLinks","thumbnail","description","find","_ref","_ref2","toLowerCase","replaceAll","JSXContent","display","justifyContent","LoadingSpinner","textAlign","errMsg","status","_Fragment","props","navigate","useNavigate","_useSelector","useSelector","state","tableBooks","page","rowsPerPage","displayedBooks","slice","TableContainer","padding","xs","sm","Table","TableHead","TableRow","header","TableCell","width","component","TableBody","backgroundColor","onClick","authorToUrl","handleAuthorClick","handleBookClick","_booksToPrint$length","dispatch","useDispatch","TablePagination","count","onPageChange","event","newPage","handleChangeTablePage","onRowsPerPageChange","handleChangeTableRowsPerPage","parseInt","target","value","labelRowsPerPage","labelDisplayedRows","from","rowsPerPageOptions","tableContent","useHttpRequestsContent","BooksTable","PaginationInTable","Container","Breadcrumb","paddingLeft"],"sourceRoot":""}